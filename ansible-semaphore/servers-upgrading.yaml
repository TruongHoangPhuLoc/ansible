- hosts: all
  user: locthp
  become: true
  serial: 1
  tasks:
  - block:
    - name: Update cache the Ubuntu servers to be latest
      ansible.builtin.apt:
        update_cache: true
        force_apt_get: true
      when: ansible_distribution == "Ubuntu"
      async: 7200
      poll: 5
      register: result
    - name: Upgrade the Ubuntu servers to be latest
      ansible.builtin.apt:
        force_apt_get: true
        upgrade: "yes"
      when: ansible_distribution == "Ubuntu"
      register: result
      async: 3600
      poll: 5
      notify:
        - Prepare content of message
        - Set dashes
        - Add dashes
        - Send Discord message
    rescue:
    - name: Update admin when a failure on update/upgrade occurs
      debug:
        msg: "{{ ansible_hostname }} {{ result.msg }}"
      ignore_errors: true
      # Dirty trick to run notify :)))
      changed_when: result.msg is defined
      # Send a message of error cause
      notify:
        - Prepare content of error cause
        - Set dashes
        - Add dashes
        - Send Discord message



  - name: Check if a reboot is required.
    ansible.builtin.stat:
        path: /var/run/reboot-required
        get_checksum: no
    when: ansible_distribution == "Ubuntu"
    register: reboot_required_file  
  - name: Reboot the server (if required).
    ansible.builtin.reboot:
      reboot_timeout: 3600
      test_command: "uptime"
    when: reboot_required_file.stat.exists == true

  handlers:
  - name: Prepare content of message
    ansible.builtin.set_fact:
        notification: "Host {{ ansible_hostname }} has been upgraded successfully \n"
  - name: Prepare content of error cause
    ansible.builtin.set_fact:
        notification: "Host {{ ansible_hostname }}: {{ result.msg }} \n"

  - name: Set dashes
    ansible.builtin.set_fact:
        dashes: "-------------------------------------------------------------------------"  
    when: notification is defined

  - name: Add dashes
    ansible.builtin.set_fact:
      message: "{{ dashes + '\n' + notification + dashes + '\n'  }}"
    when: notification is defined
  - name: Send Discord message
    uri:
      url: "https://discordapp.com/api/webhooks/1234035793492705382/W8-AVHaXkOG2RjAO6ILK8rfibPAGYdDNU7VSBlg5pGtRry14QzKL9qFMARhsd3sLLYLo"
      method: POST
      body_format: json
      body:
        content: "{{ message }}"
      headers:
          Content-Type: application/json
      status_code: 204
    when: message is defined

  - name: Check uptime
    shell: "uptime"
    register: uptime
